on:
  push:
    branches:
    - '*'
    paths-ignore:
    - README.md
    tags:
    - '*'
  schedule:
  - cron: '0 18 * * 0'
env:
  solution: './Ocaramba.sln'
  buildPlatform: Any CPU
  buildConfiguration: Release
  frameworkVersion: 4.0.0
  BuildVersion: ${{ env.frameworkVersion }}${{ github.run_number }}
  seleniumGridVersion: selenium-server-4.8.0.jar
  seleniumGridUrl: https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.8.0/selenium-server-4.8.0.jar
  NUGET_PACKAGES: ${{ env.Pipeline.Workspace }}/.nuget/packages
jobs:
  build_Stage_BuildTestsOnWindows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/setup-msbuild@v1.0.2
    - shell: powershell
      run: |
        $tags = git tag --sort=-creatordate   
        $tag = $tags[0]
        Write-Host "##vso[task.setvariable variable=frameworkVersion]$tag"
      if: startsWith(github.ref, 'refs/tags/')
    - shell: powershell
      run: '(Get-Content ''Ocaramba.sln'' -raw) -replace [regex](''.*?'' + ''Documentation'' + (''.*?\r\n'' * (5 + 1))) | set-content  ''Ocaramba.sln'''
    - uses: nuget/setup-nuget@v1
    - name: Cache
      uses: actions/cache@v3
      with:
        key: nuget | "${{ runner.os }}" | **/packages.lock.json,!**/bin/**,!**/obj/**
        restore-keys: 
          nuget | "${{ runner.os }}"
          nuget
        path: ${{ env.NUGET_PACKAGES }}
    - name: NuGet restore
      run: nuget restore ${{ env.solution }}
    - name: Set project versions
      id: update
      uses: vers-one/dotnet-project-version-updater@v1.4
      with:
        file: |
          "**/*.csproj"
        version: ${{ env.frameworkVersion }}
    - run: msbuild '${{ env.solution }}' /p:configuration='${{ env.buildConfiguration }}' /p:platform='${{ env.buildPlatform }}' /v:minimal
    - uses: actions/upload-artifact@v2
      with:
        path: ./Ocaramba/bin/Release/Ocaramba.${{ env.frameworkVersion }}.nupkg
    - uses: actions/upload-artifact@v2
      with:
        path: ./Ocaramba/bin/Release/Ocaramba.${{ env.frameworkVersion }}.snupkg
    - uses: actions/upload-artifact@v2
      with:
        path: ./OcarambaLite/bin/Release/OcarambaLite.${{ env.frameworkVersion }}.nupkg
    - uses: actions/upload-artifact@v2
      with:
        path: ./OcarambaLite/bin/Release/OcarambaLite.${{ env.frameworkVersion }}.snupkg
    - uses: actions/upload-artifact@v2
      with:
        path: ${{ env.Pipeline.Workspace }}
      if: (${{ job.status }} != 'cancelled')
  test_Stage_RunTestsOnDocker:
    runs-on: ubuntu-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - run: |
        docker build --file Dockerfile docker ocaramba/selenium --tags latest
        docker push --file Dockerfile docker ocaramba/selenium --tags latest
        docker-compose -f "./docker-compose.yml" up -d
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnLinux:
    runs-on: ubuntu-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - run: |
        ls	
        export ASPNETCORE_ENVIRONMENT=Linux
        echo $ASPNETCORE_ENVIRONMENT
        sudo apt-get install google-chrome-stable
        sed -i '/Documentation/,+5 d' ./Ocaramba.sln
    - run: dotnet build ./Ocaramba.sln --configuration ${{ env.buildConfiguration }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnLinuxBrowserStack:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - run: |
        ls
        export ASPNETCORE_ENVIRONMENT=Linux
        echo $ASPNETCORE_ENVIRONMENT
        sed -i '/Documentation/,+5 d' ./Ocaramba.sln
    - shell: pwsh
      run: dotnet build ./Ocaramba.sln --configuration ${{ env.buildConfiguration }}
      env:
        MAPPED_ENV_BROWSERSTACKKEY: ${{ env.browserstackkey }}
        MAPPED_ENV_BROWSERSTACKUSER: ${{ env.browserstackuser }}
        MAPPED_ENV_TESTINGBOTKEY: ${{ env.testingbotkey }}
        MAPPED_ENV_TESTINGBOTSECRET: ${{ env.testingbotsecret }}
        MAPPED_ENV_SAUCELABSACCESSKEY: ${{ env.saucelabsaccessKey }}
        MAPPED_ENV_SAUCELABSUSERNAME: ${{ env.saucelabsusername }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnWindowsCore1:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - run: dotnet add package Microsoft.TestPlatform
    - uses: actions/download-artifact@v2
    - shell: powershell
      run: Get-ChildItem .\  -Recurse
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.trx'
    - uses: actions/upload-artifact@v2
      with:
        path: ${{ env.Pipeline.Workspace }}/TestResults
      if: (${{ job.status }} != 'cancelled')
    - uses: montudor/action-zip@v0.1.0
      with:
        args: zip -r ${{ github.workspace }}/ExtentReports_${{ github.run_id }}.zip ${{ github.workspace }}/Ocaramba.Tests.NUnitExtentReports/bin/Release/net6.0/TestOutput
      if: always()
    - uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}/ExtentReports_${{ github.run_id }}.zip
        name: ExtentTestReport
      if: always()
  test_Stage_RunTestsOnWindowsCore2:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - run: dotnet add package Microsoft.TestPlatform
    - uses: actions/download-artifact@v2
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnWindowsFramework:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - run: dotnet add package Microsoft.TestPlatform
    - uses: actions/download-artifact@v2
    - shell: powershell
      run: ./ExecutingTestsOnWindowsAzure3.ps1
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnWindowsBrowserStack:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - shell: powershell
      run: dotnet add package Microsoft.TestPlatform
      env:
        MAPPED_ENV_BROWSERSTACKKEY: ${{ env.browserstackkey }}
        MAPPED_ENV_BROWSERSTACKUSER: ${{ env.browserstackuser }}
        MAPPED_ENV_TESTINGBOTKEY: ${{ env.testingbotkey }}
        MAPPED_ENV_TESTINGBOTSECRET: ${{ env.testingbotsecret }}
        MAPPED_ENV_SAUCELABSACCESSKEY: ${{ env.saucelabsaccessKey }}
        MAPPED_ENV_SAUCELABSUSERNAME: ${{ env.saucelabsusername }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsSeleniumGrid:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - run: dotnet add package Microsoft.TestPlatform
    - uses: actions/download-artifact@v2
    - shell: powershell
      run: ./ExecutingTestsOnWindowsAzure5.ps1
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  test_Stage_RunTestsOnWindowsSaucelabs:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        repository: none
    - run: dotnet add package Microsoft.TestPlatform
    - uses: actions/download-artifact@v2
    - shell: powershell
      run: ./ExecutingTestsOnWindowsAzure6.ps1
      env:
        MAPPED_ENV_BROWSERSTACKKEY: ${{ env.browserstackkey }}
        MAPPED_ENV_BROWSERSTACKUSER: ${{ env.browserstackuser }}
        MAPPED_ENV_TESTINGBOTKEY: ${{ env.testingbotkey }}
        MAPPED_ENV_TESTINGBOTSECRET: ${{ env.testingbotsecret }}
        MAPPED_ENV_SAUCELABSACCESSKEY: ${{ env.saucelabsaccessKey }}
        MAPPED_ENV_SAUCELABSUSERNAME: ${{ env.saucelabsusername }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure()
      with:
        report_paths: '**/Ocaramba.Tests.*.xml'
  release_Stage_PublishNuget:
    runs-on: windows-latest
    needs:
    - build_Stage_BuildTestsOnWindows
    - test_Stage_RunTestsOnDocker
    - test_Stage_RunTestsOnLinux
    - test_Stage_RunTestsOnLinuxBrowserStack
    - test_Stage_RunTestsOnWindowsCore1
    - test_Stage_RunTestsOnWindowsCore2
    - test_Stage_RunTestsOnWindowsFramework
    - test_Stage_RunTestsOnWindowsBrowserStack
    - test_Stage_RunTestsSeleniumGrid
    - test_Stage_RunTestsOnWindowsSaucelabs
    steps:
    - uses: actions/checkout@v2
    - shell: powershell
      run: |
        $tags = git tag --sort=-creatordate   
        $tag = $tags[0]
        Write-Host "##vso[task.setvariable variable=frameworkVersion]$tag"
      if: startsWith(github.ref, 'refs/tags/')
    - uses: actions/download-artifact@v2
    - uses: actions/download-artifact@v2
    - uses: actions/download-artifact@v2
    - uses: actions/download-artifact@v2
    - shell: powershell
      run: Get-ChildItem -Path ${{ env.Agent.BuildDirectory }} -Recurse
    - name: Push Nuget Package
      run: dotnet custom push ${{ env.Agent.BuildDirectory }}\Ocaramba.${{ env.frameworkVersion }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{ env.NuGetApiKey }}
      if: (success() && startsWith(github.ref, 'refs/tags/'))
    - name: Push Nuget Package
      run: dotnet custom push ${{ env.Agent.BuildDirectory }}\OcarambaLite.${{ env.frameworkVersion }}.nupkg -s https://api.nuget.org/v3/index.json -k ${{ env.NuGetApiKey }}
      if: (success() && startsWith(github.ref, 'refs/tags/'))