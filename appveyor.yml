skip_commits:
  files:
    - README.md
version: $(frameworkVersion).{build}
branches:
  except:
  - gh-pages
init:
 - ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
      
        Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME.$env:APPVEYOR_BUILD_NUMBER"
        
        $env:frameworkVersion = "$env:APPVEYOR_REPO_TAG_NAME" 
        
      }
      
      echo 'frameworkVersion'  $env:frameworkVersion
      
      echo 'version' $env:appveyor_build_version 

      echo 'seleniumGridVersion' $env:seleniumGridVersion 

      echo 'seleniumGridUrl' $env:seleniumGridUrl 
      if ($isWindows) {
          echo Windows: 

          (Get-WmiObject -class Win32_OperatingSystem).Caption
          [System.Environment]::OSVersion.Version   
      }
      echo 'ASPNETCORE_ENVIRONMENT' $env:ASPNETCORE_ENVIRONMENT

dotnet_csproj:
   patch: true
   file: '**\*.csproj'
   version: $(frameworkVersion)
   package_version: $(frameworkVersion)
   assembly_version: $(frameworkVersion)
   file_version: '{version}'
   informational_version: '{version}'
  
environment:
  APPVEYOR_RDP_PASSWORD:
    secure: 3OiDAcFLoSt3UCnmEU+XgM2d541PAqCNJAPqoiRqwRI=
  frameworkVersion: 3.1.16
  seleniumGridVersion: selenium-server-standalone-3.141.59.jar
  seleniumGridUrl: http://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar
  latestNugetUrl: https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
  GithubAuthToken:
    secure: x9uTnOFLUnZ6DiVhpBBxIJxij33Sz9uAIe+qef6M3sj9+J/AUmpfBmiGgqRabTqs
  COVERALLS_REPO_TOKEN:
    secure: L2Iowto/q2CJlWL0/7Noa1FZzGjye93jGokldOse3mgVnFzEvJOHzmWqzUaH1qG3
  browserstackuser:
    secure: 0JGVozUyY/OYBuPZk2Pbgw==
  browserstackkey:
    secure: opcJPLrPneM8MyVpapvon/18SF9oGQ0+ylJINJeio78=
  testingbotkey:
    secure: 1aRAvq8QRbkPLQb7BWdggEqsgd0P8Wbn96zGFb9iBG75eWbexX5n38Zadmxkv2ng
  testingbotsecret:
    secure: 6hiQzkSN5XvXxWg+idSkvJSaNni9ZTCPwlWZy1s7BkagXFyrfUPmNdRWdWwy08B8
  saucelabsusername:
    secure: DlenWuQD9Ml7NAMwOkaHcA==
  saucelabsaccessKey:
    secure: D6Yy/Ng4/rfzsqQmnzwmTtN/Knee3c8/NtI1HgKke2ybA/6WpqP38RQfSHENYECa
  APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDs6YyI6KMFUrjDkdvXZqRAFJzAU2WZo6wyodL+xl4erDJuVMnKPXfyec8OnFiCXElk2HDXorz/G6+5jo3j4u2dB5J3WXZtnUR/ZhQmoRi45tOgZP2pWUpWYwAVbNd4dvrqJRCEiRILSAxgZkDSbdRQP7ijp9ekb1E0s5YDr6VY+xSdY75u1QcOgO7dF84hsrbZnhjHIXYwSqffFuD/Occba6HaGMEz2EbD5ZxDZKdjMGobzWds2y6U7mMWBazeGG7iXx4JjlIDSfkOUgejHy669lwCDc+faFFGHRww9Tb2clhLq5MDYvH8oKr/mowi2TtvuLsO6aHaxlodq5O0hQgH appveyor
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      ASPNETCORE_ENVIRONMENT: Linux
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      ASPNETCORE_ENVIRONMENT: Windows
before_build:
 - dotnet tool install coveralls.net --tool-path packages
 - dotnet --version
 - dotnet restore

build_script:
 - dotnet build --configuration Release /verbosity:minimal "Ocaramba.sln"
after_build:
 - ps: >-
      <#echo '********************************************Copying files for gh-pages********************************************'
      
      Copy-Item -Path .\README.md -Destination .\Ocaramba.Documentation\Help\ -recurse -force -verbose 
      
      New-Item .\Ocaramba.Documentation\Help\Ocaramba.Documentation\icons\ -Type Directory
      
      Copy-Item -Path .\Ocaramba.Documentation\icons\Objectivity_logo_avatar.png -Destination .\Ocaramba.Documentation\Help\Ocaramba.Documentation\icons\ -recurse -force -verbose
      
      Copy-Item -Path .\Ocaramba.Documentation\icons\Help.png -Destination .\Ocaramba.Documentation\Help\Ocaramba.Documentation\icons\ -recurse -force -verbose
      
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        echo '********************************************Cloning gh-pages branch********************************************'
      
        Invoke-Expression "git config --global credential.helper store"
        
        Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GithubAuthToken):x-oauth-basic@github.com`n"
        
        Invoke-Expression "git config --global core.autocrlf true"
        
        Invoke-Expression "git config --global user.email 'TestAutomationGroup@objectivity.co.uk'"
        
        Invoke-Expression "git config --global user.name 'TestAutomationGroup'"
        
        Invoke-Expression "git clone https://github.com/ObjectivityLtd/Test.Automation.git --branch gh-pages .\Help"
        
        Remove-Item -recurse .\Help\* -exclude .git
        
      } else
      {
      
        New-Item -ItemType Directory -Force -Path .\Help
        
      }
      
      Copy-Item -Path .\Ocaramba.Documentation\Help\** -Destination .\Help\ -recurse -force
     
      if ($env:APPVEYOR_REPO_TAG -eq "true")
      {
        echo '********************************************Publishing new version of gh-pages********************************************'
        
        cd .\\Help 
        
        Invoke-Expression "git add --all"
        
        Invoke-Expression "git commit -m 'Publishing to gh-pages $env:appveyor_build_version'"
        
        Invoke-Expression "git push origin gh-pages --porcelain"
        
        cd ..
        
        Remove-Item .\\Help\\.git -Force  -Recurse -ErrorAction SilentlyContinue
        
      }
      
      7z a gh-pages_$env:appveyor_build_version.zip .\\Help\\** 
      
      appveyor PushArtifact gh-pages_$env:appveyor_build_version.zip #>


for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      
  test_script:
    - ps: >-
         echo '********************************************Executing tests********************************************'
        
         echo '********************************************NUnit tests********************************************'
    
         & "C:\Users\appveyor\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe" -target:"dotnet.exe" -targetargs:"test --configuration Release --no-build --no-restore Ocaramba.Tests.Angular -maxCpuCount --test-adapter-path:. --logger:Appveyor" -filter:"+[Ocaramba]*" -oldStyle -register:user -output:opencoverCoverage.xml   

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }

         & "C:\Users\appveyor\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe" -target:"dotnet.exe" -mergeoutput -targetargs:"test --configuration Release --filter TestCategory!=TakingScreehShots --no-build --no-restore Ocaramba.Tests.NUnit -maxCpuCount --test-adapter-path:. --logger:Appveyor" -filter:"+[Ocaramba]*" -oldStyle -register:user -output:opencoverCoverage.xml
    
         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
      
         & "C:\Users\appveyor\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe" -target:"dotnet.exe" -mergeoutput -targetargs:"test --configuration Release --filter TestCategory!=TakingScreehShots --no-build --no-restore Ocaramba.UnitTests -maxCpuCount --test-adapter-path:. --logger:Appveyor" -filter:"+[Ocaramba]*" -oldStyle -register:user -output:opencoverCoverage.xml
    
         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
          
         & nunit3-console.exe .\Ocaramba.Tests.Angular\bin\Release\net45\Ocaramba.Tests.Angular.dll .\Ocaramba.Tests.NUnit\bin\Release\net45\Ocaramba.Tests.NUnit.dll .\Ocaramba.UnitTests\bin\Release\net45\Ocaramba.UnitTests.dll

          if($lastexitcode -ne 0)
              {
               echo 'lastexitcode' $lastexitcode
              }
 
         echo '********************************************XUnit tests********************************************'   
         
         $xunit = (Resolve-Path "C:\Users\appveyor\.nuget\packages\xunit.runner.console\*\tools\netcoreapp2.0\xunit.console.exe").ToString()
         
         & "C:\Users\appveyor\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe" -target:"dotnet.exe" -targetargs:"test --configuration Release --no-build --no-restore Ocaramba.Tests.Xunit -maxCpuCount --test-adapter-path:. --logger:Appveyor" -filter:"+[Ocaramba]*" -oldStyle -register:user -output:opencoverCoverage.xml
        
          if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
          
          & $xunit .\Ocaramba.Tests.Xunit\bin\Release\net45\Ocaramba.Tests.Xunit.dll -appveyor -noshadow

          if($lastexitcode -ne 0)
              {
               echo 'lastexitcode' $lastexitcode
              }
          
         echo '********************************************CloudProviderCrossBrowser tests********************************************'
        
         echo '********************************************BrowserStack tests********************************************'
        
   
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//appSettings" "RemoteWebDriverHub" "http://$($env:browserstackuser):$($env:browserstackkey)@hub-cloud.browserstack.com/wd/hub"
        
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//DriverCapabilities" "build" "Ocaramba.Tests.BrowserStackCrossBrowser$env:appveyor_build_version" $true
         
         & nunit3-console.exe .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45\Ocaramba.Tests.CloudProviderCrossBrowser.dll --workers=5

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }

    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\netcoreapp2.2" "appsettings.json" "appSettings" "RemoteWebDriverHub" "http://$($env:browserstackuser):$($env:browserstackkey)@hub-cloud.browserstack.com/wd/hub" $false $true
        
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\netcoreapp2.2" "appsettings.json" "DriverCapabilities" "build" "Ocaramba.Tests.BrowserStackCrossBrowser$env:appveyor_build_version" $true $true
    
         & "C:\Users\appveyor\.nuget\packages\opencover\4.7.922\tools\OpenCover.Console.exe" -target:"dotnet.exe" -mergeoutput -targetargs:"test --configuration Release --no-build --no-restore Ocaramba.Tests.CloudProviderCrossBrowser -maxCpuCount --test-adapter-path:. --logger:Appveyor" -filter:"+[Ocaramba]*" -oldStyle -register:user -output:opencoverCoverage.xml
        
         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
          
         echo '********************************************testingbot.com tests********************************************'  
    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//appSettings" "RemoteWebDriverHub" "https://$($env:testingbotkey):$($env:testingbotsecret)@hub.testingbot.com/wd/hub/"
    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//DriverCapabilities" "build" "$Ocaramba.Tests.TestingBotCrossBrowser$env:appveyor_build_version" $true

    
         & nunit3-console.exe .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45\Ocaramba.Tests.CloudProviderCrossBrowser.dll --workers=1 --where "test =~ Chrome" --result=myresults.xml`;format=AppVeyor

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
      
         echo '********************************************saucelabs tests********************************************'
    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//appSettings" "RemoteWebDriverHub" "http://$($env:saucelabsusername):$($env:saucelabsaccessKey)@ondemand.saucelabs.com:80/wd/hub"
    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//DriverCapabilities" "build" "Ocaramba.Tests.SauceLabsCrossBrowser$env:appveyor_build_version" $true
    
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//environments/SafariMac" "platform" "macOS 10.14" $true
    
         & nunit3-console.exe .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45\Ocaramba.Tests.CloudProviderCrossBrowser.dll --workers=5 --where "test =~ Chrome || test =~ IE || test =~ Safari || test =~ Firefox" --result=myresults.xml`;format=AppVeyor

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
      
         echo '********************************************Downloading Selenium Grid********************************************' 
    
         $url = $env:seleniumGridUrl
        
         $grid = $env:seleniumGridVersion
        
         $output = $env:APPVEYOR_BUILD_FOLDER + "\Ocaramba.Tests.NUnit\bin\Release\net45\$grid"
        
         $outputLogs = $env:APPVEYOR_BUILD_FOLDER + "\Ocaramba.Tests.NUnit\bin\Release\net45\"
        
         $start_time = Get-Date

         echo "Downloading Selenium Grid from:" $url
        
         (New-Object System.Net.WebClient).DownloadFile($url, $output)
        
         echo "Selenium Grid downloaded to:" $output
        
         echo "Time taken to download $($grid): $((Get-Date).Subtract($start_time).Seconds) second(s)"
        
         echo '******************************************Start Selenium Grid in background****************************************' 
        
         $appHub=Start-Process java -ArgumentList '-jar', $output' -role hub' -RedirectStandardOutput $outputLogs'console_hub.out' -RedirectStandardError $outputLogs'console_hub.err' -passthru

         Start-Sleep -s 5
        
         echo "Selenium Grid hub started"

         $appNode=Start-Process java -ArgumentList '-jar', $output' -role node  -hub http://localhost:4444/grid/register' -RedirectStandardOutput $outputLogs'console_node.out' -RedirectStandardError $outputLogs'console_node.err' -passthru 
        
         Start-Sleep -s 5
        
         echo "Selenium Grid node started"
        
         echo '********************************************Run tests with Selenium Grid ****************************************' 
        
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.NUnit\bin\Release\net45\" "Ocaramba.Tests.NUnit.dll.config" "//appSettings" "browser|RemoteWebDriverHub" "RemoteWebDriver|http://localhost:4444/wd/hub" $true
        
         & nunit3-console.exe .\Ocaramba.Tests.NUnit\bin\Release\net45\Ocaramba.Tests.NUnit.dll --where:cat==BasicNUnit --result=myresults.xml`;format=AppVeyor

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
          
         echo '*****************************Run CloudProviderCrossBrowser tests with Selenium Grid****************************'
        
         .\scripts\set_AppConfig_for_tests.ps1 ".\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45" "Ocaramba.Tests.CloudProviderCrossBrowser.dll.config" "//appSettings" "RemoteWebDriverHub" "http://localhost:4444/wd/hub" $true
        
         & nunit3-console.exe .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\net45\Ocaramba.Tests.CloudProviderCrossBrowser.dll --where "test =~ Chrome" --result=myresults.xml`;format=AppVeyor

         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
         
         echo '*****************************Stop Selenium Grid****************************'
          
         echo "Stop Selenium Grid node" 
          
         Stop-Process -Id $appNode.Id
        
         echo "Stop Selenium Grid hub" 
        
         Stop-Process -Id $appHub.Id
        
         echo '*******************************************Sending coverage test results********************************************'
        
         & .\packages\csmacnz.Coveralls.exe --opencover -i opencoverCoverage.xml --repoToken $env:COVERALLS_REPO_TOKEN --useRelativePaths --commitId $env:APPVEYOR_REPO_COMMIT --commitBranch $env:APPVEYOR_REPO_BRANCH --commitAuthor $env:APPVEYOR_REPO_COMMIT_AUTHOR --commitEmail $env:APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL --commitMessage $env:APPVEYOR_REPO_COMMIT_MESSAGE --jobId $env:APPVEYOR_BUILD_NUMBER --serviceName appveyor

         7z a testresults_$env:appveyor_build_version.zip opencoverCoverage.xml
        
         echo '*****************************Add Selenium Grid logs to testresults****************************'
        
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.NUnit\bin\Release\net45\*.err
        
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.NUnit\bin\Release\net45\*.out
       
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.NUnit\bin\Release\**\*.png

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.NUnit\bin\Release\**\*.html

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.NUnit\bin\Release\**\*.log

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Angular\bin\Release\**\*.png

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Angular\bin\Release\**\*.html

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Angular\bin\Release\**\*.log
         
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Xunit\bin\Release\**\*.png

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Xunit\bin\Release\**\*.html

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.Xunit\bin\Release\**\*.log
        
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.UnitTests\bin\Release\**\*.png

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.UnitTests\bin\Release\**\*.html

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.UnitTests\bin\Release\**\*.log
        
         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\**\*.png

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\**\*.html

         7z a testresults_$env:appveyor_build_version.zip .\Ocaramba.Tests.CloudProviderCrossBrowser\bin\Release\**\*.log
            
         appveyor PushArtifact testresults_$env:appveyor_build_version.zip   

  artifacts:
  - path: .\**\Ocaramba.*.nupkg
    name: NuGet
  deploy:
  - provider: NuGet
    api_key:
      secure: 3oOPQoiQEcO33c/fxjAMdvjTlmB3dHrc/uwV9ehKYjNARfzrBT+xmuLCjTtKrI9F
    on:
      branch: master
      appveyor_repo_tag: true

-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      
  test_script:
    - ps: >-
        echo '********************************************Executing tests********************************************'
        
        echo '********************************************NUnit tests********************************************'   
        dotnet test --configuration Release --no-build --no-restore Ocaramba.Tests.Angular -maxCpuCount --test-adapter-path:. --logger:Appveyor
         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
          
        dotnet test --configuration Release --filter TestCategory!=NotImplementedInCoreOrUploadDownload --no-build --no-restore Ocaramba.Tests.NUnit -maxCpuCount --test-adapter-path:. --logger:Appveyor  
        
         if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
        
        dotnet test --configuration Release --filter TestCategory!=NotImplementedInCoreOrUploadDownload --no-build --no-restore Ocaramba.UnitTests -maxCpuCount --test-adapter-path:. --logger:Appveyor
        
        if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          }
        echo '********************************************XUnit tests********************************************'  
        dotnet test --configuration Release --no-build --no-restore Ocaramba.Tests.Xunit -maxCpuCount --test-adapter-path:. --logger:Appveyor
        if($lastexitcode -ne 0)
          {
           echo 'lastexitcode' $lastexitcode
          } 
          
         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.NUnit/bin/Release/**/*.png

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.NUnit/bin/Release/**/*.html

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.NUnit/bin/Release/**/*.log

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Angular/bin/Release/**/*.png

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Angular/bin/Release/**/*.html

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Angular/bin/Release/**/*.log
            
         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.UnitTests/bin/Release/**/*.png

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.UnitTests/bin/Release/**/*.html

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.UnitTests/bin/Release/**/*.log 
         
         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Xunit/bin/Release/**/*.png

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Xunit/bin/Release/**/*.html

         7z a testresults_$env:appveyor_build_version.zip ./Ocaramba.Tests.Xunit/bin/Release/**/*.log
         
        appveyor PushArtifact testresults_$env:appveyor_build_version.zip   
on_finish:
- ps: >-
    if ($isWindows) {
        #$blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    }
- sh: #export APPVEYOR_SSH_BLOCK=true
- sh: #curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
